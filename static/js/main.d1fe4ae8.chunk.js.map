{"version":3,"sources":["Components/Expenses/ExpenseFilter.js","Components/UI/Card.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/Expenses/ExpenseChart.js","Components/Expenses/Expense.js","Components/NewExpense/ExpenseForm.js","Components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","onChange","event","onChangedFilter","target","value","setYear","Card","classes","children","ExpenseDate","month","expDate","toLocaleString","day","year","getFullYear","ExpenseItem","expen","date","title","amount","ExpenseList","items","length","map","exp","id","ChartBar","barfillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","TotalMaximum","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expense","useState","filteredYear","setfilteredYear","filteredExpenses","filter","expense","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","ExpenseData","Date","onSaveExpenseDate","type","min","step","onClick","onCancel","NewExpense","visible","setvisible","enteredExpenseData","random","onAddExpense","InitialExpenses","App","setExpenses","prevExpenses","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1fe4ae8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangedFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n\r\n        <select onChange={dropdownChangeHandler} value={props.setYear}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./Card.css\";\r\n\r\nexport const Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\n\r\nexport const ExpenseDate = (props) => {\r\n  const month = props.expDate.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.expDate.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.expDate.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\n\r\nimport { ExpenseDate } from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nexport function ExpenseItem(props) {\r\n  return (\r\n    <ul>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate expDate={props.expen.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.expen.title}</h2>\r\n          <div className=\"expense-item__price\">{\"$\" + props.expen.amount}</div>\r\n        </div>\r\n\r\n        {/* <button onClick={clickHandler()}>Click Me </button>  Code execute when the page is rendered not when button is clicked, but above code will run when button is clicked*/}\r\n      </Card>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpenseList = (props) => {\r\n  //defining the var for expense content and setting the default values\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\"> No Expense Found</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((exp) => {\r\n        return <ExpenseItem expen={exp} key={exp.id} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barfillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barfillHeight = Math.round((props.value / props.maxValue) * 100);\r\n  }\r\n\r\n  return (\r\n    <div className=\" chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barfillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValue = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const TotalMaximum = Math.max(...dataPointsValue);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoints) => (\r\n        <ChartBar\r\n          key={dataPoints.label}\r\n          value={dataPoints.value}\r\n          maxValue={TotalMaximum}\r\n          label={dataPoints.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expenses of props.expenses) {\r\n    const ExpenseMonth = expenses.date.getMonth();\r\n    chartDataPoints[ExpenseMonth].value += expenses.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport \"./Expense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nexport const Expense = (props) => {\r\n  const [filteredYear, setfilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setfilteredYear(selectedYear);\r\n  };\r\n\r\n  //filtering the Full expense List according to selected year\r\n  const filteredExpenses = props.expen.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          onChangedFilter={filterChangeHandler}\r\n          setYear={filteredYear}\r\n        />\r\n\r\n        <ExpenseChart expenses={filteredExpenses} />\r\n        {/* 1) methode => this is the ternary expression */}\r\n        {/* {filteredExpenses.length === 0 ? (\r\n          <p>No Expenses Found</p>\r\n        ) : (\r\n          filteredExpenses.map((exp) => {\r\n            return <ExpenseItem expen={exp} key={exp.id} />;\r\n          })\r\n        )} */}\r\n\r\n        {/* 2 Methode=> this shortcut to write the conditional statement in one line, if the condition is true then the statement after \"&&\" will */}\r\n\r\n        {/* {filteredExpenses.length === 0 && <p>No Expenses Found</p>}\r\n        {filteredExpenses.length > 0 &&\r\n          filteredExpenses.map((exp) => {\r\n            return <ExpenseItem expen={exp} key={exp.id} />;\r\n          })} */}\r\n        <ExpenseList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import React from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\" \");\r\n  const [enteredAmount, setEnteredAmount] = useState(\" \");\r\n  const [enteredDate, setEnteredDate] = useState(\" \");\r\n\r\n  //   const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: \"\",\r\n  //     setEnteredAmount: \"\",\r\n  //     setEnteredDate: \"\",\r\n  //   });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     enteredTitle: event.target.value,\r\n    //   };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     setEnteredAmount: event.target.value,\r\n    //   };\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {\r\n    //     ...prevState,\r\n    //     setEnteredDate: event.target.value,\r\n    //   };\r\n    // });\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const ExpenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseDate(ExpenseData);\r\n\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            value={enteredDate}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"new-expense__actions \"\r\n        onClick={props.onCancel}\r\n      >\r\n        Cancel\r\n      </button>\r\n      <button type=\"submit\" className=\"new-expense__actions \">\r\n        Add Expense\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const ExpenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(ExpenseData);\r\n  };\r\n\r\n  const [visible, setvisible] = useState(false);\r\n\r\n  const ShowExpenseForm = () => {\r\n    setvisible(true);\r\n  };\r\n  const hideExpenseForm = () => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!visible && (\r\n        <button visible=\"false\" onClick={ShowExpenseForm}>\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n      {visible && (\r\n        <ExpenseForm\r\n          onSaveExpenseDate={saveExpenseDataHandler}\r\n          onCancel={hideExpenseForm}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Expense from \"./Components/Expenses/Expense\";\nimport NewExpense from \"./Components/NewExpense/NewExpense\";\n\nconst InitialExpenses = [];\n\n//   {\n//     id: \"e1\",\n//     title: \"Toilet Paper\",\n//     amount: 94.12,\n//     date: new Date(2020, 7, 14),\n//   },\n//   { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n//   {\n//     id: \"e3\",\n//     title: \"Car Insurance\",\n//     amount: 294.67,\n//     date: new Date(2021, 2, 28),\n//   },\n//   {\n//     id: \"e4\",\n//     title: \"New Desk (Wooden)\",\n//     amount: 450,\n//     date: new Date(2021, 5, 12),\n//   },\n// ];\n\nfunction App() {\n  //Actuale JSX working using the react\n  // return react.createElement(\n  //   \"div\",\n  //   {},\n  //   react.createElement(\"h2\", {}, \"hello\"),\n  //   react.createElement(Expense, {}, {})\n  // );\n  const [expenses, setExpenses] = useState(InitialExpenses);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n    console.log(\"app\");\n    console.log(expense);\n  };\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense expen={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}